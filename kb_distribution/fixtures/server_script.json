[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-04 09:58:37.161497",
  "module": "Kb Distribution",
  "name": "Prix de vente Article",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Item",
  "script": "def prix_de_vente(doc):\r\n    new_price = doc.get('prix_de_vente')      \r\n    if new_price:\r\n        # Check if an Item Price document already exists for this item\r\n        existing_price = frappe.get_list('Item Price', \r\n                                         filters={'item_code': doc.name},\r\n                                         fields=['name'])\r\n        \r\n        if existing_price:\r\n            # Update existing Item Price\r\n            item_price = frappe.get_doc('Item Price', existing_price[0].name)\r\n            item_price.price_list_rate = new_price\r\n            item_price.save()\r\n        else:\r\n            # Create new Item Price\r\n            new_item_price = frappe.get_doc({\r\n                'doctype': 'Item Price',\r\n                'item_code': doc.name,\r\n                'price_list': 'Prix de vente Détails',  # Replace with your desired price list\r\n                'price_list_rate': new_price\r\n            })\r\n            new_item_price.insert()\r\n\r\nprix_de_vente(doc)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Print",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-04 09:58:37.169332",
  "module": "Kb Distribution",
  "name": "DUPLICATA FACTURE",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "def before_print(doc, method):\r\n    if doc.customafficher_motion_pour_publicata :\r\n        if doc.custom_nombre_dimpression:\r\n            # If print_count already exists, increment it\r\n            doc.custom_nombre_dimpression = doc.custom_nombre_dimpression + 1  # Regular assignment instead of +=\r\n        else:\r\n            # If print_count doesn't exist, set it to 1 (first print)\r\n            doc.custom_nombre_dimpression = 1\r\n        \r\n        # Save the document to store the updated print_count\r\n        doc.db_update()\r\n\r\nbefore_print(doc,before_print)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-04 09:58:37.152527",
  "module": "Kb Distribution",
  "name": "Écriture de paiement date & now",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Payment Entry",
  "script": "doc.custom_dateetheur = frappe.utils.now()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-04 09:58:37.115361",
  "module": "Kb Distribution",
  "name": "BL auto from BC",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Order",
  "script": "def on_submit(doc, method):\n    if doc.docstatus != 1:  # Vérifie que le document est bien en cours de soumission\n        return\n\n    try:\n        # Récupère l'utilisateur qui a créé la commande\n        creator_user = frappe.get_doc(\"User\", doc.owner)  # Récupère l'utilisateur créateur de la commande\n        if not creator_user.get(\"bon_de_livraison_automatique\"):\n            frappe.msgprint(f\"L'option de création automatique de bon de livraison n'est pas activée pour l'utilisateur {doc.owner} \" )\n            return\n\n        # Vérifie si un bon de livraison existe déjà\n        existing_dn = frappe.get_all(\n            \"Delivery Note\",\n            filters={\"against_sales_order\": doc.name, \"docstatus\": [\"!=\", 2]},\n            limit=1\n        )\n        \n        if existing_dn:\n            frappe.msgprint(f\"Un bon de livraison existe déjà pour la commande {doc.name}\")\n            return\n\n        # Crée le bon de livraison\n        delivery_note = frappe.get_doc({\n            \"doctype\": \"Delivery Note\",\n            \"customer\": doc.customer,\n            \"against_sales_order\": doc.name,\n            \"posting_date\": frappe.utils.today(),\n            \"company\": doc.company,\n            \"items\": [\n                {\n                    \"item_code\": item.item_code,\n                    \"item_name\": item.item_name,\n                    \"description\": item.description,\n                    \"qty\": item.qty,\n                    \"uom\": item.uom,\n                    \"rate\": item.rate,\n                    \"conversion_factor\": item.conversion_factor,\n                    \"warehouse\": item.warehouse,\n                    \"against_sales_order\": doc.name,\n                    \"so_detail\": item.name,\n                    \"sales_order\": doc.name,\n                    \"sales_order_item\": item.name\n                }\n                for item in doc.items\n            ]\n        })\n\n        delivery_note.insert()\n        delivery_note.submit()  # Soumet automatiquement le bon de livraison\n        frappe.msgprint(f\"Bon de livraison {delivery_note.name} créé avec succès\")\n\n    except Exception as e:\n        frappe.log_error(str(e), \"Erreur création bon de livraison\")\n        frappe.throw(f\"Erreur lors de la création du bon de livraison: {str(e)}\")\n    \n# Exécute la fonction on_submit\non_submit(doc, on_submit)",
  "script_type": "DocType Event"
 }
]